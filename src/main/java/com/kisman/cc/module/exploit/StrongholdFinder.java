package com.kisman.cc.module.exploit;

import com.kisman.cc.module.Category;
import com.kisman.cc.module.Module;
import com.kisman.cc.settings.Setting;
import i.gishreloaded.gishcode.utils.TimerUtils;
import i.gishreloaded.gishcode.utils.visual.ChatUtils;
import net.minecraft.entity.Entity;
import net.minecraft.entity.item.EntityEnderEye;
import net.minecraft.init.Items;
import net.minecraft.util.math.BlockPos;
import net.minecraft.util.math.Vec2f;
import net.minecraft.world.World;
import net.minecraft.world.WorldServer;

public class StrongholdFinder extends Module {
    private EntityEnderEye eye1;
    private boolean eye1Done = false;

    private EntityEnderEye eye2;
    private boolean eye2Done = false;

    Vec2f v1s;
    Vec2f v1e;

    Vec2f v2s;
    Vec2f v2e;

    Vec2f intersection;

    private TimerUtils eyeTimer = new TimerUtils();

    private Setting mode = new Setting("Mode", this, false);

    public StrongholdFinder() {
        super("StrongholdFinder", "this", Category.EXPLOIT);

        setmgr.rSetting(mode);
    }
    public void onEnable() {
        if(mode.getValBoolean()) {
//            BlockPos blockpos = ((WorldServer) ((World) mc.world)).getChunkProvider().getNearestStructurePos((mc.world), "Stronghold", new BlockPos(mc.player.getPosition()), false);

//            ChatUtils.complete(blockpos.getX() + " | " + blockpos.getY() + " | " + blockpos.getZ());
        } else {
            for(Entity entity : mc.world.loadedEntityList) {
                if(entity instanceof EntityEnderEye) {
                    ChatUtils.complete("Yaw: " + entity.rotationYaw);
                }
            }
        }
    }

    public void update() {
        if(mode.getValBoolean()) {
            return;
        }

        if(eyeTimer.hasTimeElapsed(5000, false) && eye2Done) {
            eye1Done = false;
            eye2Done = false;
            eye1 = null;
            eye2 = null;
        }

        for(Entity entity : mc.world.loadedEntityList) {
            if(entity instanceof EntityEnderEye) {
                EntityEnderEye enderEye = (EntityEnderEye)entity;

                if(eye1 == null && !enderEye.isEntityEqual(eye2)) {
                    eye1 = enderEye;
                    ChatUtils.message("First eye found, please throw the next one a lot further away!");
                }
                else if(eye2 == null && !enderEye.isEntityEqual(eye1)) {
                    eye2 = enderEye;
                    ChatUtils.message("Second eye found, calculating intersection...");
                }
            }
        }

        if(eye1 != null && !eye1Done) {

            if(eye1.ticksExisted < 10 || eye1.ticksExisted > 20) {
                return;
            }

            v1s = new Vec2f((float) eye1.lastTickPosX, (float) eye1.lastTickPosZ);
            v1e = new Vec2f((float) eye1.posX, (float) eye1.posZ);

            eye1Done = true;

        }

        if(eye2 != null && !eye2Done) {

            if(eye2.ticksExisted < 10  || eye2.ticksExisted > 20) {
                return;
            }

            v2s = new Vec2f((float) eye2.lastTickPosX, (float) eye2.lastTickPosZ);
            v2e = new Vec2f((float) eye2.posX, (float) eye2.posZ);

            eye2Done = true;

        }

        if(eye1Done && eye2Done && eyeTimer.hasTimeElapsed(6000, false)) {
            eyeTimer.reset();

            try {
            }
            catch(Exception e) {
                ChatUtils.error("Â§cThe two ender pearls flew the same path, please throw them a lot further away!");
                return;
            }

//            ChatUtils.complete("Done! " + "x: " + intersection.x + ", z:" + intersection.y);

        }
    }
}
